name: CI/CD

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

permissions:
  contents: read
  id-token: write
  checks: write
  pull-requests: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      # root の依存をインストール
      - name: Install root deps
        run: npm ci

      # functions の依存をインストール（キャッシュ付き）
      - name: Cache functions node_modules
        uses: actions/cache@v4
        with:
          path: functions/node_modules
          key: ${{ runner.os }}-functions-${{ hashFiles('functions/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-functions-

      - name: Install functions deps
        working-directory: functions
        run: npm ci

      # dotenv など解決用
      - name: Build Cloud Functions
        working-directory: functions
        run: npm run build

      # Web 側の品質チェック
      - run: npm run typecheck --if-present
      - run: npm run lint --if-present
      - run: npm test --if-present -- --ci

      # Web をビルド（dist 作成）
      - name: Prepare Vite env
        run: |
          cat <<'EOF' > .env.production
          VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}
          EOF

      - run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
          if-no-files-found: error

  deploy-preview:
    if: github.event_name == 'pull_request'
    needs: build-and-test
    runs-on: ubuntu-latest
    environment:
      name: preview
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Write SA file
        run: |
          cat > sa.json <<'JSON'
          ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          JSON

      - name: Deploy preview (channel)
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/sa.json
          CHANNEL: ${{ (github.head_ref || github.ref_name || github.sha) }}
        run: |
          SAFE_CHANNEL=$(echo "$CHANNEL" | tr '/._' '-' | tr '[:upper:]' '[:lower:]' | cut -c1-40)
          npx firebase-tools@latest hosting:channel:deploy "$SAFE_CHANNEL" \
            --only default \
            --expires 7d \
            --project ambiguous-expression-checker

  deploy-production:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build-and-test
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Write SA file
        run: |
          cat > sa.json <<'JSON'
          ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          JSON

      - name: Deploy LIVE (no channel)
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/sa.json
        run: |
          npx firebase-tools@latest deploy \
            --only hosting:default \
            --project ambiguous-expression-checker
